
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, KeyboardButtonPollType
from aiogram.utils.keyboard import ReplyKeyboardBuilder

start_cb = ReplyKeyboardMarkup(
    keyboard=[
        # –ü–µ—Ä–≤—ã–π —Ä—è–¥ –∫–Ω–æ–ø–æ–∫
        [
        KeyboardButton(text="–ú–µ–Ω—é"),
        KeyboardButton(text="–û –º–∞–≥–∞–∑–∏–Ω–µ"),
        ],
        # –í—Ç–æ—Ä–æ–π —Ä—è–¥ –∫–Ω–æ–ø–æ–∫
        [
        KeyboardButton(text="–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏"),
        KeyboardButton(text="–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã"),
        ],
    ],
    resize_keyboard=True,
    input_field_placeholder='–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?'
)
# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —É–¥–∞–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
del_kbd = ReplyKeyboardRemove()

# –í—Ç–æ—Ä–æ–π —Å–ø–æ—Å–æ–± —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
start_cb2 = ReplyKeyboardBuilder()
start_cb2.add(
    KeyboardButton(text="–ú–µ–Ω—é"),
    KeyboardButton(text="–û –º–∞–≥–∞–∑–∏–Ω–µ"),
    KeyboardButton(text="–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏"),
    KeyboardButton(text="–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã"),
)
start_cb2.adjust(2, 2)

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –º–µ—Ç–æ–¥–æ–º row
start_cb3 = ReplyKeyboardBuilder()
start_cb3.attach(start_cb2)
start_cb3.row(KeyboardButton(text="–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"))

# –¢–µ—Å—Ç–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∑–∞–ø—Ä–æ—Å–∞
test_cb = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(text="–°–æ–∑–¥–∞—Ç—å –æ–ø—Ä–æ—Å", request_poll=KeyboardButtonPollType()),
        ],
        [
            KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä ‚òéÔ∏è", request_contact=True),
            KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é üß≠", request_location=True)
        ],
    ],
    resize_keyboard=True
)

def get_keyboard(
        *btns: str,
        placeholder: str = None,
        request_contact: int = None,
        request_location: int = None,
        sizes: tuple[int] = (2, 2)
):
    keyboard = ReplyKeyboardBuilder()
    for index, text in enumerate(btns, start=0):
        if request_contact and request_contact == index:
            keyboard.add(KeyboardButton(text=text, request_contact=True))

        elif request_location and request_location == index:
            keyboard.add(KeyboardButton(text=text, request_location=True))

        else:
            keyboard.add(KeyboardButton(text=text))

    return keyboard.adjust(*sizes).as_markup(
        resize_keyboard=True, input_field_placeholder=placeholder
    )
